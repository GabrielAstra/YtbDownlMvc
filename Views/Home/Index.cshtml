﻿@{
    ViewData["Title"] = "Download de Vídeo ou Áudio";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <style>
        * {
            font-family: Helvetica;
            padding: 0;
            margin: 0;
        }

        form {
            width: 60%;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #171717;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
            background-image: url("http://www.transparenttextures.com/patterns/carbon-fibre-v2.png");
        }

        .ads {
            padding: 30px;
            margin: 1em auto;
        }

        label {
            display: block;
            margin-bottom: 5px;
            color: #fff;
        }

        input[type="url"],
        select {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }

        input:focus {
            box-shadow: 0 0 0 0;
            outline: 0;
        } 

        button {
            display: block;
            width: 100%;
            padding: 10px;
            background-color: #ff0000;
            color: #fff;
            border: none;
            border-radius: 3px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #ff1f1f
        }

        h1 {
            text-align: center;
            margin-bottom: 40px;
            font-size: 30px;
            font-weight: bold;
        }

        #mediaList {
            text-align: center;
        }

        #mediaList a {
            color: red;
        }

    </style>
</head>
<body>
    <h1>Download de Vídeo ou Áudio</h1>

    <form asp-action="BaixarArquivo" method="post" onsubmit="return validateForm()">
        <label for="tipoMedia">Tipo de Mídia:</label>
        <select name="tipoMedia" id="tipoMedia">
            <option value="audio">Áudio</option>
            <option value="video">Vídeo</option>
        </select>

        <label for="mediaUrl">URL da Mídia:</label>
        <input type="url" name="mediaUrl" id="mediaUrl" required />

        <button type="submit">Baixar</button>
    </form>
    
    <div class="ads">
        
    </div>

    <h1>Histórico de Downloads</h1>

    <table class="table table-striped table-dark">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Tipo de Mídia</th>
                <th scope="col">URL</th>
            </tr>
        </thead>
        <tbody id="mediaList">
            
        </tbody>
    </table>

    <script>

        function validateForm() {
            let tipoMedia = document.querySelector('select[name="tipoMedia"]').value;
            let mediaUrl = document.querySelector('input[name="mediaUrl"]').value;

            if (tipoMedia && mediaUrl && (mediaUrl.includes('www.youtube.com/watch?v=') || mediaUrl.includes('youtu.be/'))) {
                Save(tipoMedia, mediaUrl);
                return true;
            } else {
                alert('URL inválida');
                return false;
            }
        }

        function Save(tipoMedia, mediaUrl) {
            let storedMedia = JSON.parse(localStorage.getItem('selectedMedia')) || [];

            let mediaItem = {
                tipoMedia,
                mediaUrl,
                timestamp: Date.now() 
            };

            storedMedia.push(mediaItem);

            localStorage.setItem('selectedMedia', JSON.stringify(storedMedia));
            updateMediaList();
        }
        function updateMediaList() {
            let mediaList = document.getElementById('mediaList');
            mediaList.innerHTML = ''; 

            let storedMedia = JSON.parse(localStorage.getItem('selectedMedia')) || [];

            for (let i = 0; i < storedMedia.length; i++) {
                let mediaItem = storedMedia[i];
                let newRow = document.createElement('tr');
                newRow.innerHTML = `<th scope="row">${i + 1}</th><td>${mediaItem.tipoMedia}</td><td>${mediaItem.mediaUrl}</td>`;
                mediaList.appendChild(newRow);
            }
        }

        function clearExpiredCache() {
            let storedMedia = JSON.parse(localStorage.getItem('selectedMedia')) || [];
            const currentTime = Date.now();
            const expirationTime = 30 * 60 * 1000; //tempo para armazenamento, deixar em 30 minutos!

            storedMedia = storedMedia.filter(item => (currentTime - item.timestamp) < expirationTime);

            localStorage.setItem('selectedMedia', JSON.stringify(storedMedia));
        }

        clearExpiredCache();

        updateMediaList();
    </script>
</body>
</html>
